/*
 * Copyright 2021-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j.reporting.events.api;

import org.opentest4j.reporting.schema.QualifiedName;

import java.io.Closeable;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.function.Consumer;

public interface DocumentWriter<T extends Element<T>> extends Closeable, Appendable<T> {

	/**
	 * No-op implementation of {@code DocumentWriter}
	 */
	static <T extends Element<T>> DocumentWriter<T> noop() {
		return new DocumentWriter<T>() {

			@Override
			public <C extends ChildElement<T, ? super C>> Appendable<T> append(Factory<C> creator,
					Consumer<? super C> configurer) {
				return this;
			}

			@Override
			public void close() {
			}
		};
	}

	static <R extends Element<R>> DocumentWriter<R> create(QualifiedName rootElement,
			NamespaceRegistry namespaceRegistry, Path xmlFile) throws Exception {
		return new DefaultDocumentWriter<>(rootElement, namespaceRegistry, Files.newBufferedWriter(xmlFile));
	}

}
