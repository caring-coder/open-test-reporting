package org.opentest4j.reporting.events.api;

import org.opentest4j.reporting.schema.QualifiedName;

import java.io.Closeable;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.function.Consumer;

public interface DocumentWriter<R extends Element<R>> extends Closeable {

    /**
     * No-op implementation of {@code DocumentWriter}
     */
    static <R extends Element<R>> DocumentWriter<R> noop() {
        return new DocumentWriter<R>() {

            @Override
            public <T extends ChildElement<R, ?>> void append(Factory<T> eventFactory, Consumer<? super T> eventConsumer) {
            }

            @Override
            public void close() {
            }
        };
    }

    static <R extends Element<R>> DocumentWriter<R> create(QualifiedName rootElement, NamespaceRegistry namespaceRegistry, Path xmlFile) throws Exception {
        return new DefaultDocumentWriter<>(rootElement, namespaceRegistry, Files.newBufferedWriter(xmlFile));
    }

    default <T extends ChildElement<R, ?>> void append(Factory<T> eventFactory) {
        append(eventFactory, __ -> {});
    }

    <T extends ChildElement<R, ?>> void append(Factory<T> eventFactory, Consumer<? super T> eventConsumer);

}
