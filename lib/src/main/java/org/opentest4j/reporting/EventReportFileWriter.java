package org.opentest4j.reporting;

import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.time.Instant;

public class EventReportFileWriter implements Closeable {

    private final BufferedWriter writer;
    private final XMLStreamWriter xmlWriter;

    public EventReportFileWriter(Path file) throws IOException, XMLStreamException {
        XMLOutputFactory factory = XMLOutputFactory.newInstance();
        writer = Files.newBufferedWriter(file);
        xmlWriter = factory.createXMLStreamWriter(writer);
    }

    @Override
    public void close() throws IOException {
        try {
            xmlWriter.close();
        } catch (XMLStreamException e) {
            throw new IOException("Failed to write XML", e);
        }
    }

    public synchronized void started(String id, Instant time) throws IOException, XMLStreamException {
        xmlWriter.writeEmptyElement("started");
        xmlWriter.writeAttribute("id", id);
        xmlWriter.writeAttribute("time", time.toString());
        xmlWriter.writeEndDocument();
        writer.newLine();
    }

    public synchronized void finished(String id, Instant time) throws IOException, XMLStreamException {
        xmlWriter.writeEmptyElement("finished");
        xmlWriter.writeAttribute("id", id);
        xmlWriter.writeAttribute("time", time.toString());
        xmlWriter.writeEndDocument();
        writer.newLine();
    }
}
